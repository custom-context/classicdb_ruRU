diff --git a/src/game/Chat/Chat.cpp b/src/game/Chat/Chat.cpp
index 9b9f69913..dd06579d0 100644
--- a/src/game/Chat/Chat.cpp
+++ b/src/game/Chat/Chat.cpp
@@ -2033,7 +2033,7 @@ bool ChatHandler::CheckEscapeSequences(const char* message)
                                 return false;
                             }
 
-                            for (uint8 i = 0; i < MAX_LOCALE; ++i)
+                            for (uint8 i = 0; i < MAX_DBC_LOCALE; ++i)
                             {
                                 uint32 skillLineNameLength = strlen(skillLine->name[i]);
                                 if (skillLineNameLength > 0 && strncmp(skillLine->name[i], buffer, skillLineNameLength) == 0)
@@ -2046,7 +2046,7 @@ bool ChatHandler::CheckEscapeSequences(const char* message)
                             }
                         }
                         bool foundName = false;
-                        for (uint8 i = 0; i < MAX_LOCALE; ++i)
+                        for (uint8 i = 0; i < MAX_DBC_LOCALE; ++i)
                         {
                             if (*linkedSpell->SpellName[i] && strcmp(linkedSpell->SpellName[i], buffer) == 0)
                             {
@@ -2094,7 +2094,7 @@ bool ChatHandler::CheckEscapeSequences(const char* message)
                             ItemLocale const* il = sObjectMgr.GetItemLocale(linkedItem->ItemId);
 
                             bool foundName = false;
-                            for (uint8 i = LOCALE_koKR; i < MAX_LOCALE; ++i)
+                            for (uint8 i = LOCALE_koKR; i < MAX_DBC_LOCALE; ++i)
                             {
                                 int8 dbIndex = sObjectMgr.GetStorageLocaleIndexFor(LocaleConstant(i));
                                 if (dbIndex == -1 || il == nullptr || (size_t)dbIndex >= il->Name.size())
diff --git a/src/game/Chat/Level1.cpp b/src/game/Chat/Level1.cpp
index 1f46f3680..d7908aa45 100644
--- a/src/game/Chat/Level1.cpp
+++ b/src/game/Chat/Level1.cpp
@@ -1288,7 +1288,7 @@ bool ChatHandler::HandleLookupAreaCommand(char* args)
             if (!Utf8FitTo(name, wnamepart))
             {
                 loc = 0;
-                for (; loc < MAX_LOCALE; ++loc)
+                for (; loc < MAX_DBC_LOCALE; ++loc)
                 {
                     if (loc == GetSessionDbcLocale())
                         continue;
@@ -1302,7 +1302,7 @@ bool ChatHandler::HandleLookupAreaCommand(char* args)
                 }
             }
 
-            if (loc < MAX_LOCALE)
+            if (loc < MAX_DBC_LOCALE)
             {
                 // send area in "id - [name]" format
                 std::ostringstream ss;
diff --git a/src/game/Chat/Level2.cpp b/src/game/Chat/Level2.cpp
index d604174bf..b17558231 100644
--- a/src/game/Chat/Level2.cpp
+++ b/src/game/Chat/Level2.cpp
@@ -1474,7 +1474,7 @@ bool ChatHandler::HandleLookupFactionCommand(char* args)
             if (!Utf8FitTo(name, wnamepart))
             {
                 loc = 0;
-                for (; loc < MAX_LOCALE; ++loc)
+                for (; loc < MAX_DBC_LOCALE; ++loc)
                 {
                     if (loc == GetSessionDbcLocale())
                         continue;
@@ -1488,7 +1488,7 @@ bool ChatHandler::HandleLookupFactionCommand(char* args)
                 }
             }
 
-            if (loc < MAX_LOCALE)
+            if (loc < MAX_DBC_LOCALE)
             {
                 FactionState const* repState = target ? target->GetReputationMgr().GetState(factionEntry) : nullptr;
                 ShowFactionListHelper(factionEntry, LocaleConstant(loc), repState, target);
@@ -4228,7 +4228,7 @@ bool ChatHandler::HandleLearnAllRecipesCommand(char* args)
         if (!Utf8FitTo(name, wnamepart))
         {
             loc = 0;
-            for (; loc < MAX_LOCALE; ++loc)
+            for (; loc < MAX_DBC_LOCALE; ++loc)
             {
                 if (loc == GetSessionDbcLocale())
                     continue;
@@ -4242,7 +4242,7 @@ bool ChatHandler::HandleLearnAllRecipesCommand(char* args)
             }
         }
 
-        if (loc < MAX_LOCALE)
+        if (loc < MAX_DBC_LOCALE)
         {
             targetSkillInfo = skillInfo;
             break;
diff --git a/src/game/Chat/Level3.cpp b/src/game/Chat/Level3.cpp
index 177075ddc..802036512 100644
--- a/src/game/Chat/Level3.cpp
+++ b/src/game/Chat/Level3.cpp
@@ -2470,7 +2470,7 @@ bool ChatHandler::HandleLookupItemSetCommand(char* args)
             if (!Utf8FitTo(name, wnamepart))
             {
                 loc = 0;
-                for (; loc < MAX_LOCALE; ++loc)
+                for (; loc < MAX_DBC_LOCALE; ++loc)
                 {
                     if (loc == GetSessionDbcLocale())
                         continue;
@@ -2484,7 +2484,7 @@ bool ChatHandler::HandleLookupItemSetCommand(char* args)
                 }
             }
 
-            if (loc < MAX_LOCALE)
+            if (loc < MAX_DBC_LOCALE)
             {
                 // send item set in "id - [namedlink locale]" format
                 if (m_session)
@@ -2533,7 +2533,7 @@ bool ChatHandler::HandleLookupSkillCommand(char* args)
             if (!Utf8FitTo(name, wnamepart))
             {
                 loc = 0;
-                for (; loc < MAX_LOCALE; ++loc)
+                for (; loc < MAX_DBC_LOCALE; ++loc)
                 {
                     if (loc == GetSessionDbcLocale())
                         continue;
@@ -2547,7 +2547,7 @@ bool ChatHandler::HandleLookupSkillCommand(char* args)
                 }
             }
 
-            if (loc < MAX_LOCALE)
+            if (loc < MAX_DBC_LOCALE)
             {
                 char valStr[50] = "";
                 char const* knownStr = "";
@@ -2658,7 +2658,7 @@ bool ChatHandler::HandleLookupSpellCommand(char* args)
             if (!Utf8FitTo(name, wnamepart))
             {
                 loc = 0;
-                for (; loc < MAX_LOCALE; ++loc)
+                for (; loc < MAX_DBC_LOCALE; ++loc)
                 {
                     if (loc == GetSessionDbcLocale())
                         continue;
@@ -2672,7 +2672,7 @@ bool ChatHandler::HandleLookupSpellCommand(char* args)
                 }
             }
 
-            if (loc < MAX_LOCALE)
+            if (loc < MAX_DBC_LOCALE)
             {
                 ShowSpellListHelper(target, spellInfo, LocaleConstant(loc));
                 ++counter;
@@ -2897,7 +2897,7 @@ bool ChatHandler::HandleLookupTaxiNodeCommand(char* args)
             if (!Utf8FitTo(name, wnamepart))
             {
                 loc = 0;
-                for (; loc < MAX_LOCALE; ++loc)
+                for (; loc < MAX_DBC_LOCALE; ++loc)
                 {
                     if (loc == GetSessionDbcLocale())
                         continue;
@@ -2911,7 +2911,7 @@ bool ChatHandler::HandleLookupTaxiNodeCommand(char* args)
                 }
             }
 
-            if (loc < MAX_LOCALE)
+            if (loc < MAX_DBC_LOCALE)
             {
                 // send taxinode in "id - [name] (Map:m X:x Y:y Z:z)" format
                 if (m_session)
diff --git a/src/game/Globals/Locales.cpp b/src/game/Globals/Locales.cpp
index 61e1936db..077e98c59 100644
--- a/src/game/Globals/Locales.cpp
+++ b/src/game/Globals/Locales.cpp
@@ -9,6 +9,8 @@ char const* localeNames[MAX_LOCALE] =
     "zhCN",
     "zhTW",
     "esES",
+    "esMX",
+    "ruRU"
 };
 
 // used for search by name or iterate all names
@@ -22,6 +24,8 @@ LocaleNameStr const fullLocaleNameList[] =
     { "zhCN",   LOCALE_zhCN },
     { "zhTW",   LOCALE_zhTW },
     { "esES",   LOCALE_esES },
+    { "esMX",   LOCALE_esMX },
+    { "ruRU",   LOCALE_ruRU },
     { nullptr,  LOCALE_enUS }
 };
 
diff --git a/src/game/Globals/Locales.h b/src/game/Globals/Locales.h
index 641ee9771..93093f495 100644
--- a/src/game/Globals/Locales.h
+++ b/src/game/Globals/Locales.h
@@ -32,9 +32,12 @@ enum LocaleConstant : uint8
     LOCALE_zhCN = 4,
     LOCALE_zhTW = 5,
     LOCALE_esES = 6,
+    LOCALE_esMX = 7,
+    LOCALE_ruRU = 8,
 };
 
-#define MAX_LOCALE 7
+#define MAX_LOCALE 9
+#define MAX_DBC_LOCALE 7
 #define DEFAULT_LOCALE LOCALE_enUS
 
 LocaleConstant GetLocaleByName(const std::string& name);
diff --git a/src/game/Server/DBCStores.cpp b/src/game/Server/DBCStores.cpp
index 86de2a844..2235d06ef 100644
--- a/src/game/Server/DBCStores.cpp
+++ b/src/game/Server/DBCStores.cpp
@@ -649,7 +649,7 @@ uint32 GetAreaIdByLocalizedName(const std::string& name)
     {
         if (auto AreaEntry = sAreaStore.LookupEntry(i))
         {
-            for (uint32 i = 0; i < MAX_LOCALE; ++i)
+            for (uint32 i = 0; i < MAX_DBC_LOCALE; ++i)
             {
                 std::string area_name(AreaEntry->GetAreaName(i));
                 if (area_name.size() > 0 && name.find(" - " + area_name) != std::string::npos)
@@ -752,7 +752,7 @@ entry::view::ChatChannelView GetChatChannelsEntryFor(const std::string& name, ui
             // try to match by name first, avoid creating custom channels with same name
             if (!wname.empty())
             {
-                for (uint32 i = 0; i < MAX_LOCALE; ++i)
+                for (uint32 i = 0; i < MAX_DBC_LOCALE; ++i)
                 {
                     Utf8toWStr(entry->GetPattern(i), wpattern);
 
diff --git a/src/game/World/World.cpp b/src/game/World/World.cpp
index a8662d0fc..ee0b4b473 100644
--- a/src/game/World/World.cpp
+++ b/src/game/World/World.cpp
@@ -1426,9 +1426,9 @@ void World::DetectDBCLang()
 {
     uint32 m_lang_confid = sConfig.GetIntDefault("DBC.Locale", 255);
 
-    if (m_lang_confid != 255 && m_lang_confid >= MAX_LOCALE)
+    if (m_lang_confid != 255 && m_lang_confid >= MAX_DBC_LOCALE)
     {
-        sLog.outError("Incorrect DBC.Locale! Must be >= 0 and < %d (set to 0)", MAX_LOCALE);
+        sLog.outError("Incorrect DBC.Locale! Must be >= 0 and < %d (set to 0)", MAX_DBC_LOCALE);
         m_lang_confid = DEFAULT_LOCALE;
     }
 
@@ -1437,8 +1437,8 @@ void World::DetectDBCLang()
 
     std::string availableLocalsStr;
 
-    uint32 default_locale = MAX_LOCALE;
-    for (int i = MAX_LOCALE - 1; i >= 0; --i)
+    uint32 default_locale = MAX_DBC_LOCALE;
+    for (int i = MAX_DBC_LOCALE - 1; i >= 0; --i)
     {
         if (strlen(race->name[i]) > 0)                      // check by race names
         {
@@ -1449,13 +1449,13 @@ void World::DetectDBCLang()
         }
     }
 
-    if (default_locale != m_lang_confid && m_lang_confid < MAX_LOCALE &&
+    if (default_locale != m_lang_confid && m_lang_confid < MAX_DBC_LOCALE &&
             (m_availableDbcLocaleMask & (1 << m_lang_confid)))
     {
         default_locale = m_lang_confid;
     }
 
-    if (default_locale >= MAX_LOCALE)
+    if (default_locale >= MAX_DBC_LOCALE)
     {
         sLog.outError("Unable to determine your DBC Locale! (corrupt DBC?)");
         Log::WaitBeforeContinueIfNeed();
